plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.springframework.experimental.aot' version '0.11.0'
    id 'org.hidetake.swagger.generator' version '2.10.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://mvnrepository.com/artifact/org.bitcoinj/bitcoinj-core' }
    maven { url 'https://mvnrepository.com/artifact/org.springframework/spring-web' }

    mavenCentral()
}

dependencies {

// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-function-web
    implementation 'org.springframework.cloud:spring-cloud-starter-function-web:3.2.1'
// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-ui
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.4'
// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream
//    implementation 'org.springframework.cloud:spring-cloud-stream:3.2.1'


    implementation 'org.jetbrains:annotations:22.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // https://mvnrepository.com/artifact/org.bitcoinj/bitcoinj-core
    implementation 'org.bitcoinj:bitcoinj-core:0.16.1'

// https://mvnrepository.com/artifact/io.vavr/vavr
    implementation 'io.vavr:vavr:1.0.0-alpha-4'

// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-function-deployer
    implementation 'org.springframework.cloud:spring-cloud-function-deployer:3.2.1'


//	compile "io.springfox:springfox-swagger-ui:3.1.0"

}
build {

}
test {
    useJUnitPlatform()
}


bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
